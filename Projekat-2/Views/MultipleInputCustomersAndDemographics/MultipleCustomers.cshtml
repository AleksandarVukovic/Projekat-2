@model Projekat_2.Models.MultipleInputCustomersAndDemographics

<div>
    <form asp-action="SelectDemographic">

        @Html.Hidden("createCustomers", Model.createCustomers)
        @for (int i = 0; i < Model.multipleCustomers.demographicsInDatabase.Count(); i++)
        {
            @Html.HiddenFor(x => x.multipleCustomers.demographicsInDatabase[i].Text)
            @Html.HiddenFor(x => x.multipleCustomers.demographicsInDatabase[i].Value)
        }
        Select demographic:
        <select asp-for="multipleCustomers.selectedDemographicId" asp-items="Model.multipleCustomers.demographicsInDatabase"></select>
        <br />
        <button type="submit">odaberi</button>
    </form>

</div>
<br />
<br />
<div class="container">
    <div class="row">


        <div class="col-sm">
            <p>
                @using (Html.BeginForm("CreateCustomer", null, FormMethod.Get))
                {
                    @Html.Hidden("createCustomers", Model.createCustomers)

                    @if (Model.multipleCustomers.newCustomers != null)
                    {
                        @for (int i = 0; i < Model.multipleCustomers.newCustomers.Count(); i++)
                        {
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].CompanyName)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Address)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].City)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].ContactName)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].ContactTitle)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Country)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].CustomerId)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Fax)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Orders)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Phone)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].PostalCode)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Region)
                        }
                    }

                    @Html.Hidden("multipleCustomers.selectedDemographicId", Model.multipleCustomers.selectedDemographicId)
                    @for (int i = 0; i < Model.multipleCustomers.demographicsInDatabase.Count(); i++)
                    {
                        @Html.HiddenFor(x => x.multipleCustomers.demographicsInDatabase[i].Text)
                        @Html.HiddenFor(x => x.multipleCustomers.demographicsInDatabase[i].Value)
                        @Html.HiddenFor(x => x.multipleCustomers.demographicsInDatabase[i].Selected)
                    }

                    <input type="submit" value="Create customer" />
                }
            </p>
            <table class="table" id="newCustomers" name="newCustomers">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.multipleCustomers.newCustomer.CompanyName)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.multipleCustomers.newCustomers != null)
                    {
                        @foreach (var item in Model.multipleCustomers.newCustomers)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CompanyName)
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

        </div>


        <div class="col-sm">
            @if (Model.multipleCustomers.newCustomer != null)
            {

                @using (Html.BeginForm("CreateCustomer", null, FormMethod.Post))
                {

                    @Html.Hidden("createCustomers", Model.createCustomers)

                    @if (Model.multipleCustomers.newCustomers != null)
                    {
                        @for (int i = 0; i < Model.multipleCustomers.newCustomers.Count(); i++)
                        {
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].CompanyName)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Address)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].City)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].ContactName)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].ContactTitle)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Country)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].CustomerId)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Fax)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Orders)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Phone)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].PostalCode)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Region)
                        }
                    }

                    @Html.Hidden("multipleCustomers.selectedDemographicId", Model.multipleCustomers.selectedDemographicId)
                    @for (int i = 0; i < Model.multipleCustomers.demographicsInDatabase.Count(); i++)
                    {
                        @Html.HiddenFor(x => x.multipleCustomers.demographicsInDatabase[i].Text)
                        @Html.HiddenFor(x => x.multipleCustomers.demographicsInDatabase[i].Value)
                    }

                    <partial name="~/Views/Customers/CreateCustomerPartialView.cshtml" model="@Model.multipleCustomers.newCustomer" />
                }
            }
        </div>

    </div>

    <div class="row">


        <div class="col-sm">
            <p>
                @using (Html.BeginForm("CreateCustomer", null, FormMethod.Get))
                {
                    @Html.Hidden("createCustomers", Model.createCustomers)

                    @if (Model.multipleCustomers.newCustomers != null)
                    {
                        @for (int i = 0; i < Model.multipleCustomers.newCustomers.Count(); i++)
                        {
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].CompanyName)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Address)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].City)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].ContactName)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].ContactTitle)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Country)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].CustomerId)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Fax)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Orders)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Phone)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].PostalCode)
                            @Html.HiddenFor(model => Model.multipleCustomers.newCustomers[i].Region)
                        }
                    }

                    @Html.Hidden("multipleCustomers.selectedDemographicId", Model.multipleCustomers.selectedDemographicId)
                    @for (int i = 0; i < Model.multipleCustomers.demographicsInDatabase.Count(); i++)
                    {
                        @Html.HiddenFor(x => x.multipleCustomers.demographicsInDatabase[i].Text)
                        @Html.HiddenFor(x => x.multipleCustomers.demographicsInDatabase[i].Value)
                        @Html.HiddenFor(x => x.multipleCustomers.demographicsInDatabase[i].Selected)
                    }

                    <input type="submit" value="Create customer" />
                }
            </p>
        </div>
    </div>
</div>
